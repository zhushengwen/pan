import * as checks from '../index'

describe('tests', function () {
  it('isArray return true if an array is passed', function () {
    checks.isArray([]).should.equal(true)
  })

  it('isArray return false if a non-array is passed', function () {
    checks.isArray().should.equal(false)
    checks.isArray('foo').should.equal(false)
    checks.isArray({}).should.equal(false)
    checks.isArray(null).should.equal(false)
  })

  it('isDefined return false if value is undefined', function () {
    checks.isDefined().should.equal(false)
  })

  it('isDefined return true if value is defined', function () {
    checks.isDefined('').should.equal(true)
  })

  it('isFunction return true if value is a function', function () {
    checks.isFunction(() => {}).should.equal(true)
    checks.isFunction(function () {}).should.equal(true)
  })

  it('isFunction return false if value is not a function', function () {
    checks.isFunction().should.equal(false)
    checks.isFunction('').should.equal(false)
    checks.isFunction({}).should.equal(false)
  })

  it('throwIfUndefined should throw if value is not defined', function () {
    checks.throwIfUndefined.should.throw(/value/)
  })

  it('throwIfUndefined should throw second arg if value is not defined', function () {
    (() => checks.throwIfUndefined(undefined, 'foo')).should.throw(/foo/)
  })

  it('throwIfNotValidSemver should throw if not a valid semver', function () {
    checks.throwIfNotValidSemver('1.2.3');
    (() => checks.throwIfNotValidSemver('asdf')).should.throw(/Expected/)
  })
})
